@model UsuarioModels;
﻿@{
    Layout = null;
}
<title>Cadastre-se</title>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600&display=swap" rel="stylesheet">
<link href="~/css/alerts.css" rel="stylesheet" />
<link href='https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css' rel='stylesheet'>
<link href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css' rel='stylesheet'>
<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.min.css' rel='stylesheet'>
<link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome-animation/0.2.1/font-awesome-animation.min.css' rel='stylesheet'>
<link href="~/css/login.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/16.0.0/css/intlTelInput.css">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=1">
<style>
    form .input-wrapper {
        transform: unset;
    }
    .iti__country-list {
        background-color: var(--bg-color) !important;
        box-shadow: unset;
        border: unset;
        white-space: unset;
        scrollbar-width: thin; /* Para navegadores que suportam a propriedade */
        scrollbar-color: transparent transparent; /* Cor do indicador da barra de rolagem e do fundo */
        width: 315px;
        border-radius: 8px;
    }
    .iti__country-list::-webkit-scrollbar {
            width: 8px; /* Largura da barra de rolagem */
    }
    .iti__country-list::-webkit-scrollbar-thumb {
            background-color: transparent; /* Cor do indicador da barra de rolagem */
    }
    .iti__country-list::-webkit-scrollbar-track {
            background-color: transparent; /* Cor do fundo da barra de rolagem */
    }
    .iti__divider {
        display: none;
    }
    .iti__dial-code {
        color: var(--color);
    }
    .form h1 {
        margin: unset;
    }
    ul.theme-picker {
        margin-bottom: 10px;
    }
</style>
<ul class="theme-picker">
    <li data-theme="barney" class="barney"></li>
    <li data-theme="firewatch" class="firewatch"></li>
    <li data-theme="citrus" class="citrus"></li>
    <li data-theme="marsh" class="marsh"></li>
    <li data-theme="frost" class="frost"></li>
    <li data-theme="slate" class="slate"></li>
    <li data-theme="candy" class="candy"></li>
</ul>
<!-- Exibindo mensagens de sucesso ou erro -->
@if (TempData["NomeExistente"] != null)
{
    <div class="row" id="Aviso">
        <div class="col-sm-12">
            <div class="alert fade alert-simple alert-danger alert-dismissible text-left font__family-montserrat font__size-16 font__weight-light brk-library-rendered rendered show" style="background-color: #6c757d;">
                <button type="button" class="close font__size-18" data-dismiss="alert">
                </button>
                <i class="start-icon fa fa-exclamation-triangle faa-flash animated"></i>
                <strong class="font__weight-semibold">Atenção!</strong> "@Html.Raw(TempData["NomeExistente"])"
            </div>
        </div>
    </div>
}
<form class="form" asp-controller="Login" asp-action="Salvar" id="formCadastro" method="post" style="perspective: none!important">
    <h1>WAR-GROW</h1>
    <p>Utilize seus dados para se cadastrar.</p>
        <div class="input-wrapper">
            <div class="input-wrapper">
                <input type="text" placeholder="digite seu nome e sobrenome" name="Nome" id="Nome" required onchange="this.value = this.value.trim()" />
                <i class="bx bxs-user-circle"></i>
            </div>
            <div class="input-wrapper">
                <input type="hidden" asp-for="IntlNumber" />
                <input type="tel" class="form-control valid" asp-for="Apelido" style="background-color: var(--input-bg-color); border: none; border-radius: 6px; color: var(--color); font-size: 16px; padding: 14px 89px 14px 97px; transition: all 250ms ease-in-out 0s;height: 52px;" im-insert="true" aria-invalid="false">
                <i class="bx bxs-phone"></i>
            </div>
        <div class="form-content">
            <div class="input-wrapper">
                <input type="text" placeholder="digite seu e-mail" name="Email" id="Email" required onchange="this.value = this.value.trim()" style="text-transform: lowercase !important;" />
                <i class='bx bxs-envelope'></i>
            </div>

            <div class="input-wrapper">
                <input type="password" placeholder="digite sua senha" name="Senha" id="Senha" required onchange="this.value = this.value.trim()" />
                <i class="bx bx-key"></i>
            </div>
            <div class="input-wrapper">
                <input type="password" placeholder="confirme sua senha" name="ConfirmeSenha" id="ConfirmeSenha" />
                <i class="bx bx-key"></i>
            </div>
            <button type="button" onclick="location.href='/'" style="float: left;">
                    Fazer login
                </button>
                <button type="submit" style="float: right;">
                    Cadastrar
                </button>
        </div>
</form>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/inputmask/4.0.8/jquery.inputmask.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/16.0.0/js/intlTelInput.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/16.0.0/js/utils.js"></script>
<script src="/js/js.cookie.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script>
    let themeList = document.querySelector(".theme-picker");
    let defaultThemeItem = themeList.firstElementChild;
    let themeListItems = themeList.childNodes;
    let themeTracker = themeState();
    let listItemTracker = itemState();
    let bodyElement = document.body;
    let form = document.querySelector(".form");

    init();

    function getCookie(name) {
        var value = "." + Cookies.get('logincolor');
        return value
    }

    function init() {
        bindEvents();
        setTheme();
        //defaultThemeItem.click();
        var cookie = getCookie();
        $(cookie).click();
    }


    function bindEvents() {
        themeListItems.forEach(function (element) {
            element.addEventListener("click", handleThemeChange);
        });
    }

    function handleThemeChange(event) {
        let selectedItem = event.target;
        let selectedTheme = event.target.dataset.theme;

        if (
            !selectedItem.classList.contains("pressed") &&
            !form.classList.contains("rotate")
        ) {
            form.classList.add("rotate");

            setSelectedThemeItem(selectedItem);

            setTimeout(() => {
                setTheme(selectedTheme);
            }, 650);

            setTimeout(() => {
                form.classList.remove("rotate");
            }, 1500);
        }
    }

    function setTheme(selectedTheme) {
        bodyElement.classList.remove(themeTracker.get());
        themeTracker.set(selectedTheme);
        bodyElement.classList.add(themeTracker.get());
    }

    function setSelectedThemeItem(selectedItem) {
        listItemTracker.get()?.classList.remove("pressed");
        listItemTracker.set(selectedItem);
        document.cookie = "logincolor=" + selectedItem.className + "; expires=Thu, 31 Dec 2099 12:00:00 UTC";
        listItemTracker.get().classList.add("pressed");
    }

    function themeState() {
        let selectedTheme = null;
        return {
            set: function (theme) {
                selectedTheme = theme;
            },

            get: function () {
                return selectedTheme;
            }
        };
    }

    function itemState() {
        let selectedItem = null;
        return {
            set: function (item) {
                selectedItem = item;
            },

            get: function () {
                return selectedItem;
            }
        };
    }
    $("#formCadastro").validate({
        rules: {
            Nome: {
                required: true,
            },
            Apelido: {
                required: false,
            },
            Email: {
                required: true,
                email: true,
            },
            Senha: {
                required: true,
                minlength: 8
            },
            ConfirmeSenha: {
                required: true,
                equalTo: "#Senha",
            }
        },
        messages: {
            Nome: {
                required: "Esse campo é obrigatório",
            },
            Apelido: {
                required: "Esse campo é obrigatório",
            },
            Email: {
                required: "Esse campo é obrigatório",
                email: "O e-mail não está no formato adequado",
            },
            Senha: {
                required: "Esse campo é obrigatório",
                minlength: "A senha deve ter no mínimo 8 caracteres"
            },
            ConfirmeSenha: {
                required: "Esse campo é obrigatório",
                equalTo: "As senhas não coincidem",
            }
        }
    });

    $(document).ready(function () {
        document.getElementsByTagName("center")[0].style.display = "none"
    });
    function Fade() {
        setTimeout(function () {
            var Aviso = document.getElementById("Aviso");
            if (Aviso != null) {
                Aviso.style.display = "none";
            }
        }, 10000);
    }

    Fade();

    const obscureEmail = (emailString) => {
        var splitEmail = emailString.split("@@")
        var domain = splitEmail[1];
        var name = splitEmail[0];
        return name.substring(0, 3).concat(Array(name.length - 3).join("*")).concat("*").concat("@@").concat(domain)
    };

    if ("@Html.Raw(TempData["EmailCadastrado"])" != "") {
        const email = obscureEmail("@Html.Raw(TempData["EmailCadastrado"])");
        $("#EmailCadastrado").html(email);
    }
    $(function () {
        var input = document.querySelectorAll("input[name=Apelido]");
        var iti = $('.iti.iti--allow-dropdown.iti--separate-dial-code');
        for (var i = 0; i < input.length; i++) {
            iti = intlTelInput(input[i], {
                autoHideDialCode: false,
                autoPlaceholder: "aggressive",
                initialCountry: "br",
                separateDialCode: true,
                preferredCountries: ['br', 'us'],
                customPlaceholder: function (selectedCountryPlaceholder, selectedCountryData) {
                    return '' + selectedCountryPlaceholder.replace(/[0-9]/g, 'X');
                },
            });
            $('input[name="Apelido"]').on("focus click countrychange", function (e, countryData) {
                var pl = $(this).attr('placeholder') + '';
                var res = pl.replace(/X/g, '9');
                if (res != 'undefined') {
                    $(this).inputmask(res, { placeholder: "X", clearMaskOnLostFocus: true });
                }
            });
            $('input[name="Apelido"]').on("focusout", function (e, countryData) {
                var intlNumber = iti.getNumber();
                console.log(intlNumber);
            });
        };
        $('#formCadastro').submit(function () {
            var intlNumber = iti.getSelectedCountryData().dialCode;
            $('input[name="IntlNumber"]').val(intlNumber);
            $(this).find(':submit').attr('disabled', 'disabled');
            setTimeout(function () {
                form.find(':submit').removeAttr('disabled');
            }, 5000);
        });
    });
</script>